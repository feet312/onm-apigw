####################
### local 
####################

server:
  port: 7800

spring: 
  cloud:
    config:
      name: bootstrap
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "https://onm.sksignet.com:8080"
            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
              - OPTIONS
              - DELETE
              - PATCH
            allowedHeaders: '*'
            allow-credentials: true
      routes:
        - id: onm-auth
          uri: http://onm-auth.sksignet.com:8800
          predicates: 
            - Path=/auth/*/login
          filters: 
            - RewritePath=/auth/(?<segment>/?.*), /$\{segment}
        - id: onm-auth
          uri: http://onm-auth.sksignet.com:8800
          predicates: 
            - Path=/auth/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/auth/(?<segment>/?.*), /$\{segment}
        - id: onm-ba
          uri: http://onm-ba.sksignet.com:9800
          predicates: 
            - Path=/onm-ba/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/onm-ba/(?<segment>/?.*), /$\{segment}

token: 
  access-expired-time: 3600000
  refresh-expired-time: 604800000
  secret: "sksignet_onm_service"
  refresh-token-name: refresh-token
  access-token-name: access-token
  
api: 
  auth:
    url: http://onm-auth.sksignet.com:8800/user/authCheck

  
logging:
  level:
    org.springframework.cloud.gateway: info
    com.sk.sigent: debug
    root: INFO